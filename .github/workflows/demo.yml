name: Remote Deployment

on: 
  push:     
    branches: 
      - main
env:
 Region: ap-south-1
 name: nginx
 clustername: my-eks-cluster  

jobs:  
  terraform:
    runs-on: ubuntu-latest 
    
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
       
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: "1.3.7"  

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region:  ${{ env.Region }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install Ansible and dependencies
      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible boto3   

      - name: s3
        run: |
            
      - name: Set AWS Credentials
        run: |
          echo "aws-access-key-id=${{ secrets.AWS_ACCESS_KEY_ID }}" >> $GITHUB_ENV
          echo "aws-secret-access-key=${{ secrets.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_ENV 
          echo "aws-region=ap-south-1" >> $GITHUB_ENV 

      - name: s3
        run: ansible-playbook s3.yml
       

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        
      - name: repo check
        run: aws ecr create-repository --repository-name ${{ env.name }}  --region ${{ env.Region }}
        continue-on-error: true

        

      - name: build
        run:  docker build -t {{ env.name }}.

      - name: tag
        run: docker tag nginx:latest 585768173504.dkr.ecr.${{ env.Region }}.amazonaws.com/${{ env.name }}:latest
           
      - name: push    
        run:  docker push 585768173504.dkr.ecr.${{ env.Region }}.amazonaws.com/${{ env.name }}:latest

      - name: update kubeconfig
        run: aws eks update-kubeconfig --name ${{ env.clustername }}    --region ${{ env.Region }} 

      

      - name: deploy 
        run: kubectl apply -f nginx-deployment-service.yaml

      - name: svc
        run: kubectl get svc
      - name: pod
        run: kubectl get pods

      - name: log
        run: kubectl describe pods nginx-deployment-54dcc97b7b-cmfkl  

        
    



      
      

      
      

      

      

        


      

      
        

        

        

      
